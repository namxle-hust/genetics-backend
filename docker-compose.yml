version: '2'

services:
  sample-import:
    container_name: genetics_sample_import
    build:
      context: .
      dockerfile: ./apps/sample-import/DockerFile
      target: development
    command: npm run start:dev sample-import
    env_file:
      - ./apps/sample-import/.env
    depends_on:
      - mongodb
      - prisma-migration
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3700:3700'
    networks:
      - genetics

  # samples-handler:
  #   container_name: genetics_samples-handler
  #   build:
  #     context: .
  #     dockerfile: ./apps/samples-handler/DockerFile
  #     target: development
  #   command: npm run start:dev samples-handler
  #   env_file:
  #     - ./apps/samples-handler/.env
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - '3000:3000'
  #   depends_on:
  #     - prisma-migration
  #     - rabbitmq
  #   networks:
  #     - genetics

  # sample-status-processor:
  #   container_name: genetics_sample_status_processor
  #   build:
  #     context: .
  #     dockerfile: ./apps/sample-status-processor/DockerFile
  #     target: development
  #   command: npm run start:dev sample-status-processor
  #   env_file:
  #     - ./apps/sample-status-processor/.env
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   depends_on:
  #     - prisma-migration
  #     - rabbitmq
  #   networks:
  #     - genetics

  # fastq-analyzer-service:
  #   container_name: genetics_fastq_analyzer
  #   build:
  #     context: .
  #     dockerfile: ./apps/fastq-analyzer/DockerFile
  #     target: development
  #   command: npm run start:dev fastq-analyzer
  #   env_file:
  #     - ./apps/fastq-analyzer/.env
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - '4000:4000'
  #   depends_on:
  #     - rabbitmq
  #   networks:
  #     - genetics

  # vcf-analyzer-service:
  #   container_name: genetics_vcf-analyzer
  #   build:
  #     context: .
  #     dockerfile: ./apps/vcf-analyzer/DockerFile
  #     target: development
  #   command: npm run start:dev vcf-analyzer
  #   env_file:
  #     - ./apps/vcf-analyzer/.env
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - '4500:4500'
  #   depends_on:
  #     - rabbitmq
  #   networks:
  #     - genetics

  # rabbitmq:
  #   container_name: genetics_rabbitmq
  #   image: rabbitmq:3.8-management-alpine
  #   ports:
  #     - 5672:5672
  #     - 15672:15672
  #   volumes:
  #     - /var/lib/rabbitmq
  #     - /var/log/rabbitmq
  #   networks:
  #     - genetics

  postgres-db:
    image: postgres:13
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=genetics
    networks:
      - genetics

  prisma-migration:
    container_name: genetics_prisma_migration
    tty: true
    volumes:
      - ./libs/prisma:/app
    build:
      context: .
      dockerfile: ./libs/prisma/DockerFile
    environment:
      - POSTGRES_URI=postgresql://postgres:123@postgres-db:5432/genetics?schema=public
    entrypoint: ./startup.sh
    ports:
      - 5555:5555
    depends_on:
      - postgres-db
    networks:
      - genetics

  mongodb:
    container_name: genetics_mongodb
    image: docker.io/bitnami/mongodb:5.0
    ports:
      - '27017:27017'
    volumes:
      - 'mongodb_data:/bitnami/mongodb'
    environment:
      - MONGODB_ROOT_USER=root
      - MONGODB_ROOT_PASSWORD=password123
      - MONGODB_DATABASE=genetics
    networks:
      - genetics

  # information-service:
  #   container_name: genetics_information
  #   build:
  #     context: .
  #     dockerfile: ./apps/information/DockerFile
  #     target: development
  #   command: npm run start:dev information
  #   env_file:
  #     - ./apps/information/.env
  #   depends_on:
  #     - mongodb
  #     - prisma-migration
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - '3900:3900'
  #   networks:
  #     - genetics

volumes:
  mongodb_data:
    driver: local
networks:
  genetics:
